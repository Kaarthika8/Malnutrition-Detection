import tensorflow as tf
from tensorflow.keras import layers, models
from tensorflow.keras.datasets import cifar10, cifar100
from tensorflow.keras.preprocessing.image import ImageDataGenerator
import matplotlib.pyplot as plt

#build model
def build_model(num_classes, input_shape=(32,32,3)):
  model = models.Sequential([
      layers.Conv2D(32, (3,3), activation='relu', input_shape = input_shape),
      layers.MaxPooling2D((2,2)),
      layers.Conv2D(64, (3,3), activation='relu'),
      layers.MaxPooling2D((2,2)),
      layers.Conv2D(128, (3,3), activation='relu'),
      layers.Flatten(),
      layers.Dense(128, activation='relu'),
      layers.Dense(num_classes, activation='softmax')
  ])

  model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy']
                )
  
  return model


#train model
def train_model(model, x_train, y_train, x_test, y_test, epochs=10, batch_size=64):
  datagen = ImageDataGenerator(
      rotation_range = 20,
      width_shift_range = 0.2,
      height_shift_range = 0.2,
      shear_range =0.2,
      zoom_range = 0.2,
      horizontal_flip = True,
      fill_mode = 'nearest'
  )

  datagen.fit(x_train)

  history = model.fit(
      datagen.flow(x_train, y_train, batch_size=batch_size),
      epochs=epochs,
      validation_data=(x_test, y_test),
      verbose = 1
  )

  test_loss, test_accuracy = model.evaluate(x_test, y_test, verbose=0)
  print(f"Test accuracy : {test_accuracy:.2f}")

  return history

#CIFAR 10
(x_train, y_train), (x_test, y_test) = cifar10.load_data()
x_train, x_test = x_train/255.0, x_test/255.0

cifar10_model = build_model(num_classes=10)
print("Trainging CIFAR10")
history_cifar10 = train_model(cifar10_model, x_train, y_train, x_test, y_test, epochs = 10)

#CIFAR 100
(x_train_100, y_train_100), (x_test_100, y_test_100) = cifar100.load_data()
x_train_100, x_test_100 = x_train_100/255.0, x_test_100/255.0

cifar100_model = build_model(num_classes=100)
print("Training CIFAR100")
history_cifar100 = train_model(cifar100_model ,x_train_100, y_train_100, x_test_100, y_test_100, epochs=10)

#plot
plt.figure(figsize=(12,6))

plt.subplot(1,2,2)
plt.plot(history_cifar10.history['accuracy'], label='train accuracy')
plt.plot(history_cifar10.history['val_accuracy'], label='validation accuracy')
plt.title('CIFAR10')
plt.xlabel('epochs')
plt.ylabel('accuracy')
plt.legend()

plt.subplot(1,2,2)
plt.plot(history_cifar100.history['accuracy'], label='train accuracy')
plt.plot(history_cifar100.history['val_accuracy'], label='validation accuracy')
plt.title('CIFAR100')
plt.xlabel('epochs')
plt.ylabel('accuracy')
plt.legend()

plt.tight_layout()
plt.show()
